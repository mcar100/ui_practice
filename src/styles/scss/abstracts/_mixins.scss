@use "variables" as c;

@mixin position($p: absolute, $t: 0, $b: 0, $l: 0, $r: 0) {
  position: $p;
  top: $t;
  bottom: $b;
  left: $l;
  right: $r;
}

@mixin margin($a: 0px, $t: 0px, $b: 0px, $l: 0px, $r: 0px) {
  @if ($a>0) {
    margin: $a;
  } @else {
    margin-top: $t;
    margin-bottom: $b;
    margin-left: $l;
    margin-right: $r;
  }
}

@mixin padding($a: 0px, $t: 0px, $b: 0px, $l: 0px, $r: 0px) {
  @if ($a>0) {
    padding: $a;
  } @else {
    padding-top: $t;
    padding-bottom: $b;
    padding-left: $l;
    padding-right: $r;
  }
}

@mixin box-style($w: 100px, $h: 100px, $bgc: c.$basic) {
  width: $w;
  height: $h;
  background-color: $bgc;
}

@mixin box-color($bgc: #303030, $rc: #fff) {
  background-color: $bgc;
  border-color: $rc;
}

@mixin box-minSize($mw: 100px, $mh: 100px) {
  min-width: $mw;
  min-height: $mh;
}

@mixin box-maxSize($mw: 500px, $mh: 500px) {
  max-width: $mw;
  max-height: $mh;
}

@mixin font-style($fs: 10px, $fw: bold, $fc: c.$black) {
  font-size: $fs;
  font-weight: $fw;
  color: $fc;
}

@mixin font-center() {
  text-align: center;
  line-height: 5px;
  @include flexbox();
}

@mixin font-overflow() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin font-wrap() {
  overflow-wrap: break-word;
  word-wrap: break-word;
}

@mixin font-scroll() {
  overflow: auto;
}

// /* border */
@mixin border($w: 1px, $s: solid, $c: c.$bar, $r: 1px) {
  border: $w $s $c;
  border-radius: $r;
}

@mixin border-radius($tl: 0px, $tr: 0px, $bl: 0px, $br: 0px) {
  border-top-left-radius: $tl;
  border-top-right-radius: $tr;
  border-bottom-left-radius: $bl;
  border-bottom-right-radius: $br;
}

@mixin border-partial(
  $t: 0px,
  $l: 0px,
  $r: 0px,
  $b: 0px,
  $s: solid,
  $c: c.$bar
) {
  border-top: $t $s $c;
  border-left: $l $s $c;
  border-right: $r $s $c;
  border-bottom: $b $s $c;
}

// /* flex */
@mixin flexbox($d: row, $jc: center, $ai: center, $g: 0px) {
  display: flex;
  flex-direction: $d;
  justify-content: $jc;
  align-items: $ai;
  gap: $g;
}

@mixin flex-self($js: center, $as: center) {
  justify-self: $js;
  align-self: $as;
}

@mixin flex-container(
  $w,
  $h,
  $bgc: c.$basic,
  $rc: c.$reverse,
  $fd: column,
  $fjc: center,
  $fai: center
) {
  @include box-style($w, $h, $bgc);
  @include border($c: $rc);
  @include flexbox($d: $fd, $jc: $fjc, $ai: $fai);
}

// /* grid */
@mixin gridbox(
  $a: false,
  $js: center,
  $ai: center,
  $g: 0px,
  $gtr: false,
  $gtc: false
) {
  display: grid;
  @if ($a) {
    grid-template-areas: $a;
  }
  @if ($gtr) {
    grid-template-rows: $gtr;
  }
  @if ($gtc) {
    grid-template-columns: $gtc;
  }
  justify-content: $js;
  align-items: $ai;
  gap: $g;
}

@mixin grid-self($js: center, $as: center) {
  justify-self: $js;
  align-self: $as;
}

/* buttons */
@mixin circle-button() {
  border: none;
  border-radius: 100%;

  &:hover {
    opacity: 90%;
  }
}

@mixin classic-button(
  $w: 50px,
  $h: 30px,
  $bgc: c.$f-basic,
  $fs: 12px,
  $fc: c.$f-white,
  $bw: none,
  $bc: c.$bar,
  $br: 3px
) {
  @include box-style($w, $h, $bgc);
  @include font-style($fs, bold, $fc);
  @include border($bw, solid, $bc, $br);
  cursor: pointer;

  & > a {
    color: $fc !important;
  }

  &:hover {
    opacity: 90%;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 30%;
  }

  &:disabled:hover {
    cursor: not-allowed;
    opacity: 30%;
  }
}

@mixin background-image($url) {
  background-image: url($url);
  background-repeat: no-repeat;
  background-position: 0px 0px;
}
